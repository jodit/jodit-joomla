{"version":3,"sources":["components/button/style.module.css","components/list/style.module.css","components/checkbox/style.module.css","components/copytext/style.module.css","components/data/style.module.css","components/number/style.module.css","components/text/style.module.css","components/plugins/style.module.css","components/master/style.module.css","components/tab/style.module.css","components/tab/Tab.js","components/tab/Tabs.js","components/list/List.js","components/number/Number.js","components/data/Popup.js","components/checkbox/CheckBox.js","components/master/Options.js","components/button/Button.js","components/button/Separator.js","components/button/Break.js","components/master/Buttons.js","components/url/URL.js","components/text/Text.js","components/url/URLS.js","components/copytext/CopyText.js","components/master/State.js","components/plugins/Plugins.js","components/themes/Color.js","components/themes/Themes.js","components/master/LoremIpsum.js","components/master/Sizes.js","components/editor/editor.js","components/master/JoditMaster.js","App.js","index.js"],"names":["module","exports","Tab","this","props","children","Component","Tabs","openTab","event","setTab","target","innerText","links","currentActive","currentTab","tabs","filter","tab","type","map","index","label","active","push","className","style","button","buttonActive","onClick","header","List","onChange","refs","elm","value","name","listItems","Array","isArray","list","Object","keys","key","defaultValue","select","ref","Number","parseInt","Popup","state","content","findInfo","needle","data","checkInfo","setState","loadingState","loadData","updateContent","box","popup","window","JoditPlayConfig","dataURL","process","success","fetch","getMyPath","then","json","haystack","undefined","replace","shortText","length","callback","result","info","some","CheckBox","hovered","onBlur","clearTimeout","timeout","onHover","setTimeout","checked","onMouseEnter","onMouseLeave","right","defaultChecked","labelText","popupKey","Options","preset","setOption","custom","inline","toolbar","textIcons","toolbarButtonSize","toolbarSticky","toolbarStickyOffset","autofocus","useSearch","spellcheck","iframe","direction","language","Jodit","lang","enter","defaultMode","MODE_WYSIWYG","MODE_SOURCE","MODE_SPLIT","showCharsCounter","showWordsCounter","showXPathInStatusbar","uploader","insertImageAsBase64URI","Button","toggle","setActive","moveUp","move","moveDown","onDoubleClick","row","row_active","row_disable","icon","dangerouslySetInnerHTML","__html","modules","Icon","get","lastCol","Separator","remove","e","stopPropagation","separator","colSpan","trash","Break","Buttons","toggleAll","buttons","removeButtons","forEach","indexOf","splice","setButtons","activeIndex","up","buttonsStart","slice","next","buf","buttonsEnd","addSeparator","getAttribute","restoreDefaults","confirm","defaultOptions","table","textAlign","padding","restore","title","add","URL","placeholder","Text","URLS","parentNode","querySelector","plus","urls","call","querySelectorAll","input","concat","url","fill","CopyText","mode","textarea","document","createElement","body","appendChild","codebox","execCommand","removeChild","render","item","config","saveHeightInStorage","saveModeInStorage","readonly","askBeforePasteHTML","askBeforePasteFromWord","defaultActionOnPaste","INSERT_AS_HTML","INSERT_CLEAR_HTML","INSERT_AS_TEXT","INSERT_ONLY_TEXT","Plugins","togglePlugin","pluginName","plugins","disablePlugins","split","Boolean","toString","join","items","main","displayColorPicker","handleClick","handleClose","setColor","color","rgb","selector","styleKey","hex","bindValue","bindTransform","styles","reactCSS","marginBottom","width","height","borderRadius","background","swatch","boxShadow","display","cursor","marginRight","popover","position","zIndex","cover","top","bottom","left","Themes","getValue","_","theme","setValue","setCSS","generateCss","css","variableName","resetStyles","getComputedStyle","getPropertyValue","a","toUpperCase","substring","LoremIpsum","Sizes","allowResizeY","setHeight","minHeight","maxHeight","allowResizeX","setWidth","minWidth","maxWidth","defaultFontSizePoints","pt","px","JoditEditor","forwardRef","id","tabIndex","editorRef","textArea","useRef","useLayoutEffect","current","useEffect","element","make","workplace","events","on","destruct","SyntaxHighlighter","registerLanguage","js","history","createHistory","JoditMaster","defaultState","getDefaultState","showLoremIpsum","currentButtonsTab","workBoxWidth","buttonsMD","getButtons","buttonsSM","buttonsXS","getRemoveButtons","iframeStyle","toolbarAdaptive","sizeLG","initialCSS","initialConfig","setButtonsTab","change","toggleLoremIpsum","timer","JSON","stringify","prevState","newStage","iframeCSSLinks","iframeBaseUrl","link","getCode","options","getChangedOption","setConfig","__isDefault","historyAPI","http_build_query","onEditorChange","setWorkboxWidth","createEvent","initEvent","dispatchEvent","isDefault","restoreDefault","jodit","getButtonsNames","code","setCode","layout","leftside","showEditor","workbox","exampleHeader","href","showCode","showLineNumbers","codeStyle","Fragment","rightside","defaultRestore","showButtonsTab","urlencode","str","encodeURIComponent","formdata","numericPrefix","argSeparator","encodeFunc","tmp","_httpBuildQueryHelper","val","k","Error","isNaN","String","query","getParams","test","reduce","params","param","decodeURIComponent","match","App","ready","location","search","substr","JoditPlayReady","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.0062a299.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"table\":\"style_table__7qQty\",\"separator\":\"style_separator__2psV7\",\"row\":\"style_row__2TX94\",\"row_disable\":\"style_row_disable__2FFT_\",\"row_active\":\"style_row_active__1ZGWE\",\"icon\":\"style_icon__GX-gp\",\"moveDown\":\"style_moveDown__3AjG2\",\"moveUp\":\"style_moveUp__2S9pP\",\"trash\":\"style_trash__29vP3\",\"add\":\"style_add__7RkTu\",\"restore\":\"style_restore__2fmf2\",\"lastCol\":\"style_lastCol__3ZTeq\",\"info\":\"style_info__2n5vM\",\"fill\":\"style_fill__E0PIu\",\"label\":\"style_label__HkAAS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"style_list__1lIG0\",\"label\":\"style_label__2XQeQ\",\"select\":\"style_select__RjESN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1DMCT\",\"labelText\":\"style_labelText__1QvWS\",\"right\":\"style_right__1GLWD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"style_item__1Hqts\",\"button\":\"style_button__2qNs4\",\"copied\":\"style_copied__1crrM\",\"ready\":\"style_ready__18pc6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"box\":\"style_box__1ibXL\",\"popup\":\"style_popup__1nclg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1Qzzz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"label\":\"style_label__1tU4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"style_main__FDSDa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"layout\":\"style_layout__3ZBP-\",\"rightside\":\"style_rightside__27SmD\",\"leftside\":\"style_leftside__1BPts\",\"item\":\"style_item__2VXQG\",\"defaultRestore\":\"style_defaultRestore__5mBZo\",\"exampleHeader\":\"style_exampleHeader__1uV84\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"tab\":\"style_tab__1JKbX\",\"active\":\"style_active__ugHys\",\"header\":\"style_header__q0Xg6\",\"button\":\"style_button__2Q5NL\",\"buttonActive\":\"style_buttonActive__3ccvn\"};","import React, { Component } from 'react';\r\n\r\nexport default class Tab extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                {this.props.children}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport Tab from \"./Tab\";\r\n\r\nexport default class Tabs extends Component {\r\n    openTab = (event) => {\r\n        this.props.setTab(event.target.innerText);\r\n    };\r\n    render() {\r\n        let links = [],\r\n            currentActive = this.props.currentTab;\r\n\r\n        const tabs = this.props.children.filter((tab) => tab.type === Tab).map((tab, index) => {\r\n            if (!currentActive) {\r\n                currentActive  =  tab.props.label\r\n            }\r\n\r\n            let active = tab.props.label === currentActive;\r\n\r\n            links.push(<span key={index} className={style.button + (active ? ' ' + style.buttonActive : '')} onClick={(event) => {\r\n                tab.props.onClick && tab.props.onClick(tab);\r\n                this.openTab(event);\r\n            }}>{tab.props.label}</span>);\r\n\r\n            if (!active) {\r\n                return null;\r\n            }\r\n\r\n            return (\r\n                <div key={index} className={style.tab + (active ? ' ' + style.active : '')}> {tab} </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className={style.tabs}>\r\n                <div className={style.header}>\r\n                    {links}\r\n                </div>\r\n                {tabs}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class List extends Component {\r\n    onChange = () => {\r\n        this.props.onChange && this.props.onChange(this.refs.elm.value, this.props.name);\r\n    };\r\n    render() {\r\n        const keys = Array.isArray(this.props.list) ? this.props.list : Object.keys(this.props.list);\r\n\r\n        const listItems = keys.map((key) => (\r\n            <option key={key} value={key}>\r\n                {Array.isArray(this.props.list) ? key : this.props.list[key]}\r\n            </option>\r\n        ));\r\n\r\n        return (\r\n            <div className={style.list}>\r\n                <label className={style.label}>\r\n                    {this.props.label}\r\n                </label>\r\n                <select defaultValue={this.props.value} className={style.select} ref=\"elm\" onChange={this.onChange}>\r\n                    {listItems}\r\n                </select>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Number extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(parseInt(event.target.value, 10), this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <input onChange={this.onChange} type=\"number\" defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Popup extends Component {\r\n    static loadingState = false;\r\n    static data = null;\r\n\r\n    static getMyPath() {\r\n        // let a = document.createElement('A');\r\n        // a.href = window.JoditPlayConfig.curScriptElement.src;\r\n        // let path = a.pathname.split('/');\r\n        return window.JoditPlayConfig.dataURL || process.env.PUBLIC_URL\r\n    }\r\n\r\n    static loadData(success) {\r\n        fetch(Popup.getMyPath() + 'data.json')\r\n            .then((data) => {\r\n                return data.json();\r\n            })\r\n            .then((data) => {\r\n                Popup.data = data;\r\n                success();\r\n            })\r\n    }\r\n\r\n    static checkInfo(needle, haystack) {\r\n        if (haystack.name !== undefined && haystack.name.replace(/\"/g, '') === needle) {\r\n            return Popup.findInfo(needle, haystack, (needle, haystack) => {\r\n                if (haystack.shortText && haystack.shortText.replace(/\\s/g, '').length) {\r\n                    return haystack.shortText;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    static findInfo(needle, haystack, callback) {\r\n        const info = callback(needle, haystack);\r\n\r\n        if (info) {\r\n            return info;\r\n        }\r\n\r\n        if (typeof haystack === 'object') {\r\n            let result;\r\n\r\n            Object.keys(haystack).some((key) => {\r\n                result = Popup.findInfo(needle, haystack[key], callback);\r\n\r\n                if (result) {\r\n                    return true;\r\n                }\r\n\r\n                return false;\r\n            });\r\n\r\n            return result;\r\n        }\r\n    }\r\n\r\n    state = {\r\n        content: ''\r\n    };\r\n\r\n    updateContent() {\r\n        const content = Popup.findInfo(this.props.needle, Popup.data, Popup.checkInfo) || 'Not found';\r\n        if (this.state.content !== content) {\r\n            this.setState({\r\n                content\r\n            });\r\n        }\r\n    }\r\n\r\n    componentWillMount() {\r\n        if (!Popup.data && !Popup.loadingState) {\r\n            Popup.loadingState = true;\r\n            Popup.loadData(() => {\r\n                this.updateContent();\r\n            });\r\n        }\r\n        if (Popup.data) {\r\n            this.updateContent();\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div className={style.box}>\r\n            <div className={style.popup}>\r\n                {this.state.content || <span>Loading ...</span>}\r\n            </div>\r\n        </div>\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport Toggle from 'react-toggle'\r\nimport \"react-toggle/style.css\"\r\nimport Popup from \"../data/Popup\";\r\n\r\nexport default class CheckBox extends Component {\r\n    state = {\r\n        hovered: false\r\n    };\r\n    timeout;\r\n    onBlur = (event) => {\r\n        window.clearTimeout(this.timeout);\r\n        if (this.state.hovered) {\r\n            this.setState({\r\n                hovered: false\r\n            });\r\n        }\r\n\r\n    };\r\n    onHover = (event) => {\r\n        this.timeout =  window.setTimeout(() => {\r\n            if (!this.state.hovered) {\r\n                this.setState({\r\n                    hovered: true\r\n                });\r\n            }\r\n        }, 300);\r\n    };\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.checked, this.props.name);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <div onMouseEnter={this.onHover} onMouseLeave={this.onBlur} className={style.label + (this.props.right ? ' ' + style.right : '')}>\r\n                <label>\r\n                    {this.props.checked !== undefined ?\r\n                        <Toggle\r\n                            defaultChecked={this.props.defaultChecked}\r\n                            checked={this.props.checked}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        :\r\n                        <Toggle\r\n                            defaultChecked={this.props.defaultChecked}\r\n                            onChange={this.onChange}\r\n                        />\r\n                    }\r\n                    <span className={style.labelText}>{this.props.label}</span>\r\n                </label>\r\n                {this.props.popupKey && this.state.hovered && <Popup needle={this.props.popupKey}/>}\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Jodit} from \"jodit\";\r\nimport List from \"../list/List\";\r\nimport Number from \"../number/Number\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\n\r\nexport default class Options extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <List name=\"preset\" value={this.props.state.preset} onChange={this.props.setOption} list={{\r\n                    custom: 'None',\r\n                    inline: 'Inline Mode',\r\n                }} label=\"Presets\"/>\r\n\r\n                <fieldset>\r\n                    <legend>Toolbar</legend>\r\n\r\n                    <CheckBox popupKey={\"toolbar\"} name=\"toolbar\" onChange={this.props.setOption} checked={this.props.state.toolbar} label=\"Show Toolbar\"/>\r\n\r\n                    {this.props.state.toolbar === false ||\r\n\r\n                    <CheckBox\r\n                        popupKey={\"textIcons\"}\r\n                        name=\"textIcons\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.textIcons}\r\n                        label=\"Text Icons\"\r\n                    />\r\n                    }\r\n                    {this.props.state.toolbar === false ||\r\n                    <List value={this.props.state.toolbarButtonSize} name=\"toolbarButtonSize\"\r\n                          onChange={this.props.setOption} list={[\r\n                        \"tiny\", \"xsmall\", \"small\", \"middle\", \"large\"\r\n                    ]} label=\"Size of icons\"/>\r\n                    }\r\n                    {this.props.state.toolbar === false ||\r\n                    <CheckBox popupKey={\"toolbarSticky\"} name=\"toolbarSticky\" onChange={this.props.setOption} checked={this.props.state.toolbarSticky} label=\"Sticky Toolbar\"/>\r\n                    }\r\n\r\n                    {this.props.state.toolbar === false || this.props.state.toolbarSticky === false ||\r\n                    <Number\r\n                        label=\"Sticky offset\"\r\n                        name=\"toolbarStickyOffset\"\r\n                        onChange={this.props.setOption}\r\n                        value={this.props.state.toolbarStickyOffset}\r\n                    />\r\n                    }\r\n                </fieldset>\r\n                <CheckBox popupKey={\"autofocus\"} name=\"autofocus\" onChange={this.props.setOption} checked={this.props.state.autofocus} label=\"Autofocus\"/>\r\n\r\n                <CheckBox popupKey={\"useSearch\"} name=\"useSearch\" onChange={this.props.setOption} checked={this.props.state.useSearch} label=\"Use search\"/>\r\n\r\n                <CheckBox popupKey={\"spellcheck\"} name=\"spellcheck\" onChange={this.props.setOption} checked={this.props.state.spellcheck} label=\"Spell Check\"/>\r\n                <CheckBox popupKey={\"iframe\"} name=\"iframe\" onChange={this.props.setOption} checked={this.props.state.iframe} label=\"Iframe mode\"/>\r\n\r\n                <List value={this.props.state.direction} name=\"direction\" onChange={this.props.setOption} list={{'': 'auto', 'rtl': 'rtl', 'ltr': 'ltr'}} label=\"Direction\"/>\r\n                <List value={this.props.state.language} name=\"language\" onChange={this.props.setOption} list={['Auto', ...Object.keys(Jodit.lang)]} label=\"Language\"/>\r\n\r\n                <List name=\"enter\" value={this.props.state.enter} onChange={this.props.setOption} list={{\r\n                    \"P\": 'Paragraph (P)',\r\n                    \"DIV\": 'Block (DIV)',\r\n                    \"BR\": 'Break (BR)',\r\n                }} label=\"Element that will be created on Enter\"/>\r\n\r\n\r\n                <List name=\"defaultMode\" value={this.props.state.defaultMode} onChange={this.props.setOption} list={{\r\n                    [Jodit.MODE_WYSIWYG]: 'WYSIWYG',\r\n                    [Jodit.MODE_SOURCE]: 'Source code',\r\n                    [Jodit.MODE_SPLIT]: 'Split code',\r\n                }} label=\"Default mode\"/>\r\n\r\n                <fieldset>\r\n                    <legend>Status bar</legend>\r\n                    <CheckBox\r\n                        popupKey={\"showCharsCounter\"}\r\n                        name=\"showCharsCounter\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showCharsCounter}\r\n                        label=\"Show chars counter\"\r\n                    />\r\n                    <CheckBox\r\n                        popupKey={\"showWordsCounter\"}\r\n                        name=\"showWordsCounter\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showWordsCounter}\r\n                        label=\"Show words counter\"\r\n                    />\r\n                    <CheckBox\r\n                        popupKey={\"showXPathInStatusbar\"}\r\n                        name=\"showXPathInStatusbar\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.showXPathInStatusbar}\r\n                        label=\"Show path to selected element\"\r\n                    />\r\n                </fieldset>\r\n                <fieldset>\r\n                    <legend>Uploader</legend>\r\n                    <CheckBox\r\n                        name=\"uploader.insertImageAsBase64URI\"\r\n                        onChange={this.props.setOption}\r\n                        checked={this.props.state.uploader.insertImageAsBase64URI}\r\n                        label=\"Insert image as Base64 URI\"\r\n                    />\r\n                </fieldset>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport {Jodit} from \"jodit\";\r\n\r\n\r\nexport default class Button extends Component {\r\n    toggle = (active) => {\r\n        this.props.toggle(this.props.index, active);\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + (this.props.active ? style.row_active : '')+ ' ' + (!this.props.checked ? style.row_disable : '')}>\r\n            <td>\r\n                <div className={style.icon} dangerouslySetInnerHTML={{__html:Jodit.modules.Icon.get(this.props.label)}}/>\r\n            </td>\r\n            <td>\r\n                {this.props.label}\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td  className={style.lastCol}>\r\n                <CheckBox checked={this.props.checked} onChange={this.toggle}/>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Separator extends Component {\r\n    remove = (e) => {\r\n        this.props.remove(this.props.index);\r\n        e.stopPropagation()\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + style.separator + ' ' + (this.props.active ? style.row_active : '')}>\r\n            <td colSpan={2}>\r\n               Group separator\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td className={style.lastCol}>\r\n                <span onClick={this.remove} className={style.trash}></span>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Break extends Component {\r\n    remove = (e) => {\r\n        this.props.remove(this.props.index);\r\n        e.stopPropagation()\r\n    };\r\n    setActive = () => {\r\n        this.props.setActive(this.props.index);\r\n    };\r\n    moveUp = () => {\r\n        this.props.move(this.props.index, true)\r\n    };\r\n    moveDown = () => {\r\n        this.props.move(this.props.index, false)\r\n    };\r\n    render() {\r\n        return <tr onDoubleClick={this.setActive} className={style.row + ' ' + style.separator + ' ' + (this.props.active ? style.row_active : '')}>\r\n            <td colSpan={2}>\r\n               Break\r\n            </td>\r\n            <td>\r\n                <span onClick={this.moveUp} className={style.moveUp}></span>\r\n                <span onClick={this.moveDown} className={style.moveDown}></span>\r\n            </td>\r\n            <td className={style.lastCol}>\r\n                <span onClick={this.remove} className={style.trash}></span>\r\n            </td>\r\n        </tr>;\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport Button from \"../button/Button\";\r\nimport style from '../button/style.module.css';\r\nimport Separator from \"../button/Separator\";\r\nimport Break from \"../button/Break\";\r\nimport {Jodit} from \"jodit\";\r\n\r\n\r\nexport default class Buttons extends Component {\r\n    toggleAll = () => {\r\n        const buttons = [...this.props.buttons];\r\n        const removeButtons = [...this.props.removeButtons];\r\n\r\n        buttons.forEach((button, index) => {\r\n            if (removeButtons.indexOf(button) !== -1) {\r\n                removeButtons.splice(removeButtons.indexOf(button), 1);\r\n            } else {\r\n                removeButtons.push(button);\r\n            }\r\n        });\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            buttons,\r\n            removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    toggle = (index, active) => {\r\n        const button = this.props.buttons[index];\r\n        const removeButtons = [...this.props.removeButtons];\r\n\r\n        if (removeButtons.indexOf(button) !== -1 && active) {\r\n            removeButtons.splice(removeButtons.indexOf(button), 1);\r\n        } else {\r\n            !active && removeButtons.push(button);\r\n        }\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            this.props.buttons,\r\n            removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    move = (index, up) => {\r\n        const buttonsStart = this.props.buttons.slice();\r\n        const next = index + (up ? -1 : 1);\r\n        const buf = buttonsStart[index];\r\n\r\n        buttonsStart[index] = buttonsStart[next];\r\n        buttonsStart[next] = buf;\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            buttonsStart,\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    remove = (index) => {\r\n        const buttonsStart = this.props.buttons.slice(0, index);\r\n        const buttonsEnd = this.props.buttons.slice(index + 1);\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            [...buttonsStart, ...buttonsEnd],\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n\r\n    addSeparator = (event) => {\r\n        const buttonsStart = this.props.buttons.slice(0, this.props.activeIndex);\r\n        const buttonsEnd = this.props.buttons.slice(this.props.activeIndex);\r\n\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            [...buttonsStart, event.target.getAttribute('data-separator'), ...buttonsEnd],\r\n            this.props.removeButtons,\r\n            this.props.activeIndex\r\n        );\r\n    };\r\n    setActive = (index) => {\r\n        this.props.setButtons(\r\n            this.props.name,\r\n            this.props.buttons,\r\n            this.props.removeButtons,\r\n            index\r\n        );\r\n    };\r\n    restoreDefaults = () => {\r\n        if (window.confirm('Are you shure?')) {\r\n            this.props.setButtons( this.props.name, Jodit.defaultOptions[this.props.name], [], 0);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const list = this.props.buttons.map((key, index) => {\r\n            switch (key) {\r\n                case \"\\n\":\r\n                    return <Break move={this.move} remove={this.remove} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>;\r\n                case \"|\":\r\n                    return <Separator move={this.move} remove={this.remove} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>;\r\n                default:\r\n                    return <Button move={this.move} checked={this.props.removeButtons.indexOf(key) === -1} toggle={this.toggle} setActive={this.setActive} active={this.props.activeIndex === index} label={key} index={index} key={index}/>\r\n            }\r\n        });\r\n\r\n        return (\r\n            <div>\r\n                <table className={style.table}>\r\n                    <tbody>\r\n                    <tr>\r\n                        <td colSpan={5} style={{textAlign: \"right\", padding: \"5px 0\"}}>\r\n                            <span onClick={this.restoreDefaults} className={style.restore} title=\"Restore default\"></span>\r\n                            <span onClick={this.addSeparator} data-separator={\"\\n\"} className={style.add} title=\"Add Break\">Break</span>\r\n                            <span onClick={this.addSeparator} data-separator=\"|\" className={style.add} title=\"Add Separator\">Separator</span>\r\n                            <span onClick={this.toggleAll} className={style.restore} title=\"Toggle all\">Toggle all</span>\r\n                        </td>\r\n                    </tr>\r\n                    {list}\r\n                    </tbody>\r\n\r\n                </table>\r\n                <p className={style.info}>Double-Click selected row</p>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from '../button/style.module.css';\r\n\r\nexport default class URL extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.value, this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <input placeholder=\"https://\" onChange={this.onChange} type=\"url\" defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class Text extends Component {\r\n    onChange = (event) => {\r\n        this.props.onChange && this.props.onChange(event.target.value, this.props.name);\r\n    };\r\n    render() {\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <textarea onChange={this.onChange} defaultValue={this.props.value}/>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from '../button/style.module.css';\r\n\r\nexport default class URLS extends Component {\r\n    add = () => {\r\n        this.onChange(['']);\r\n    };\r\n    remove = (event) => {\r\n        let tr = event.target.parentNode.parentNode;\r\n        tr.querySelector('input').value = '';\r\n\r\n        this.onChange();\r\n    };\r\n\r\n    onChange = (plus) => {\r\n        let  urls = [];\r\n        urls = [].slice.call(this.refs.table.querySelectorAll('input')).map(input => input.value).filter(elm => elm);\r\n\r\n        if (Array.isArray(plus)) {\r\n            urls = urls.concat(plus);\r\n        }\r\n\r\n        this.props.onChange && this.props.onChange(urls, this.props.name);\r\n    };\r\n\r\n    render() {\r\n        const urls = ((this.props.value && Array.isArray(this.props.value) && this.props.value.length) ? this.props.value : ['']).map((url, index) => {\r\n            return (<tr key={index + '' + url}>\r\n                <td>\r\n                    <input placeholder=\"https://\" onBlur={this.onChange} type=\"url\"  defaultValue={url}/>\r\n                </td>\r\n                <td className={style.fill}>\r\n                    <span onClick={this.add} className={style.add}></span>\r\n                    <span onClick={this.remove} className={style.trash}></span>\r\n                </td>\r\n            </tr>);\r\n        });\r\n        return (\r\n            <div className={style.label}>\r\n                <label>\r\n                    {this.props.label}\r\n                </label>\r\n                <table className={style.table} ref=\"table\">\r\n                    <tbody>\r\n                      {urls}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport style from './style.module.css';\r\n\r\nexport default class CopyText extends Component {\r\n    state = {\r\n        mode: 'ready'\r\n    };\r\n\r\n    onClick = () => {\r\n        const textarea = document.createElement('textarea');\r\n\r\n        document.body.appendChild(textarea);\r\n        textarea.value = this.refs.codebox.innerText;\r\n        textarea.select();\r\n        document.execCommand('copy');\r\n        document.body.removeChild(textarea);\r\n\r\n        this.setState({\r\n            mode: 'copied'\r\n        });\r\n\r\n        setTimeout(() => {\r\n            if (this.state.mode === 'copied') {\r\n                this.setState({\r\n                    mode: 'ready'\r\n                });\r\n            }\r\n        }, 1000);\r\n    };\r\n    render = () => (\r\n        <div className={style.item}>\r\n            <button className={style.button + ' ' + style[this.state.mode]} onClick={this.onClick} type=\"button\">\r\n                {this.state.mode === 'ready' ? 'Copy code' : 'Copied!'}\r\n            </button>\r\n            <div ref=\"codebox\">\r\n                {this.props.children}\r\n            </div>\r\n        </div>\r\n    );\r\n}","import React, { Component } from 'react';\r\nimport List from \"../list/List\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport {Jodit} from 'jodit';\r\n\r\nexport default class state extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <CheckBox\r\n                    popupKey={\"saveHeightInStorage\"}\r\n                    name=\"saveHeightInStorage\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.saveHeightInStorage}\r\n                    label=\"Save height in storage\"\r\n                />\r\n                <CheckBox\r\n                    popupKey={\"saveModeInStorage\"}\r\n                    name=\"saveModeInStorage\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.saveModeInStorage}\r\n                    label=\"Save mode in storage\"\r\n                />\r\n                <CheckBox popupKey={\"readonly\"} name=\"readonly\" onChange={this.props.setOption} checked={this.props.config.readonly} label=\"Read Only\"/>\r\n                <hr/>\r\n                <CheckBox\r\n                    popupKey={\"askBeforePasteHTML\"}\r\n                    name=\"askBeforePasteHTML\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.askBeforePasteHTML}\r\n                    label=\"Ask before paste HTML\"\r\n                />\r\n                <CheckBox\r\n                    popupKey={\"askBeforePasteFromWord\"}\r\n                    name=\"askBeforePasteFromWord\"\r\n                    onChange={this.props.setOption}\r\n                    defaultChecked={this.props.config.askBeforePasteFromWord}\r\n                    label=\"Ask before paste from Word/Excel\"\r\n                />\r\n                <List value={this.props.config.defaultActionOnPaste} name=\"defaultActionOnPaste\" onChange={this.props.setOption} list={{\r\n                    [Jodit.INSERT_AS_HTML] : 'Insert as HTML',\r\n                    [Jodit.INSERT_CLEAR_HTML] : 'Insert cleared HTML',\r\n                    [Jodit.INSERT_AS_TEXT] : 'Insert as plain text',\r\n                    [Jodit.INSERT_ONLY_TEXT] : 'Insert only text',\r\n                }} label=\"Default insert method\"/>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react';\r\nimport style from './style.module.css';\r\nimport {Jodit} from 'jodit';\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\n\r\nexport default class Plugins extends Component {\r\n\ttogglePlugin = (value, pluginName) => {\r\n\t\tdebugger\r\n\t\tlet plugins = Array.isArray(this.props.config.disablePlugins) ?\r\n      [...this.props.config.disablePlugins] :\r\n      [...this.props.config.disablePlugins.split(/[\\s,]+/)];\r\n\r\n\t\tplugins = plugins.filter(Boolean);\r\n\r\n\t\tif (plugins.indexOf(pluginName) === -1 && !value) {\r\n\t\t\tplugins.push(pluginName);\r\n\t\t}\r\n\r\n\t\tif (plugins.indexOf(pluginName) !== -1 && value) {\r\n\t\t\tplugins.splice(plugins.indexOf(pluginName), 1);\r\n\t\t}\r\n\r\n\t\tif (plugins.toString() !== this.props.config.disablePlugins.toString()) {\r\n\t\t\tthis.props.setOption(plugins.length ? plugins.join(',') : [], 'disablePlugins');\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\tconst plugins = Jodit.plugins.items().map(([pluginName]) =>\r\n\t\t\t<CheckBox\r\n\t\t\t\tpopupKey={'plugins/' + pluginName}\r\n\t\t\t\tkey={pluginName}\r\n\t\t\t\tname={pluginName}\r\n\t\t\t\tonChange={this.togglePlugin}\r\n\t\t\t\tdefaultChecked={this.props.config.disablePlugins.indexOf(pluginName) === -1}\r\n\t\t\t\tlabel={pluginName}\r\n\t\t\t/>\r\n\t\t);\r\n\r\n\t\treturn (\r\n\t\t\t<div className={style.main}>\r\n\t\t\t\t{plugins}\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","import React, { Component } from 'react';\r\nimport reactCSS from 'reactcss'\r\n// import styles from \"./style.module.css\";\r\nimport { SketchPicker } from 'react-color';\r\n\r\nexport default class extends Component {\r\n    state = {\r\n        displayColorPicker: false,\r\n    };\r\n    handleClick = () => {\r\n        this.setState({ displayColorPicker: !this.state.displayColorPicker })\r\n    };\r\n\r\n    handleClose = () => {\r\n        this.setState({ displayColorPicker: false })\r\n    };\r\n\r\n    setColor = (color) => {\r\n        this.setState({ color: color.rgb });\r\n\r\n        this.props.setColor(this.props.selector, this.props.styleKey, color.hex);\r\n\r\n        if (this.props.bindValue) {\r\n            this.props.bindValue(this.props.bindTransform ? this.props.bindTransform(color.hex) : color.hex);\r\n        }\r\n    };\r\n\r\n    render() {\r\n        let color = typeof this.props.color === 'function' ? this.props.color(this.props.selector, this.props.styleKey) : this.props.color;\r\n\r\n        const styles = reactCSS({\r\n            'default': {\r\n                box: {\r\n                    marginBottom: '10px'\r\n                },\r\n                color: {\r\n                    width: '36px',\r\n                    height: '14px',\r\n                    borderRadius: '2px',\r\n                    background: color || 'black',\r\n                },\r\n                swatch: {\r\n                    padding: '5px',\r\n                    background: '#fff',\r\n                    borderRadius: '1px',\r\n                    boxShadow: '0 0 0 1px rgba(0,0,0,.1)',\r\n                    display: 'inline-block',\r\n                    cursor: 'pointer',\r\n                    marginRight: '10px'\r\n                },\r\n                popover: {\r\n                    position: 'absolute',\r\n                    zIndex: '2',\r\n                },\r\n                cover: {\r\n                    position: 'fixed',\r\n                    top: '0px',\r\n                    right: '0px',\r\n                    bottom: '0px',\r\n                    left: '0px',\r\n                },\r\n            },\r\n        });\r\n\r\n        return (\r\n            <div style={ styles.box }>\r\n                <label style={ styles.swatch } onClick={ this.handleClick }>\r\n                    <div style={ styles.color } />\r\n                </label>\r\n                {this.props.title}\r\n                { this.state.displayColorPicker ? <div style={ styles.popover }>\r\n                    <div style={ styles.cover } onClick={ this.handleClose }/>\r\n                    <SketchPicker color={ this.state.color } onChange={ this.setColor } />\r\n                </div> : null }\r\n\r\n            </div>\r\n        )\r\n        // return <label className={styles.color}>\r\n        //\r\n        //     <SketchPicker onChangeComplete={this.setColor}/> {this.props.title};\r\n        //     <input defaultValue={this.props.color} type=\"text\" onChange={this.setColor}/> {this.props.title}\r\n        // </label>;\r\n    }\r\n}\r\n","import React, {Component} from 'react';\r\nimport Color from \"./Color\";\r\n\r\n\r\nexport default class Themes extends Component {\r\n    static resetStyles = null;\r\n\r\n    getValue = (_, key) => {\r\n        if (this.props.theme[key] !== undefined) {\r\n            return this.props.theme[key];\r\n        }\r\n        return '';\r\n    };\r\n\r\n    setValue = (_, key, value) => {\r\n        const state = {...this.props.theme};\r\n\r\n        if (state[key] !== value) {\r\n            state[key] = value;\r\n            this.props.setCSS(this.generateCss(state), state);\r\n        }\r\n    };\r\n\r\n    /**\r\n     *\r\n     * @param state\r\n     * @return {string}\r\n     */\r\n    generateCss = (state) => {\r\n        const css = [];\r\n\r\n        Object.keys(state).forEach((variableName) => {\r\n            let value = Themes.resetStyles[variableName] ? Themes.resetStyles[variableName] : null;\r\n\r\n            if (value !== state[variableName]) {\r\n                css.push(`${variableName}: ${state[variableName]};`);\r\n            }\r\n\r\n            // // let elm = document.querySelector(selector);\r\n            // css.push(`${selector.split(/,/g,).map((selector) => {\r\n            //     if (selector === '.jodit_container') {\r\n            //         return selector\r\n            //     }\r\n            //     return '.jodit_container ' + selector;\r\n            // }).join(',\\n')} {`);\r\n            // let count = 0;\r\n            //\r\n            // Object.keys(state[selector]).forEach((key) => {\r\n            //     key.split('|').forEach((subkey) => {\r\n            //         let value = Themes.resetStyles[selector] ? Themes.resetStyles[selector][key] : null;\r\n            //         if (value !== state[selector][key]) {\r\n            //             css.push(`${Jodit.modules.Helpers.kebabCase(subkey)}: ${state[selector][key]};`);\r\n            //             count += 1;\r\n            //         }\r\n            //     });\r\n            // });\r\n            // if (count) {\r\n            //     css.push(`}`);\r\n            // } else {\r\n            //     css.pop();\r\n            // }\r\n\r\n        });\r\n\r\n        return `:root {\\n${css.join('\\n')}\\n}`;\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (!Themes.resetStyles) {\r\n            const resetStyles = {};\r\n            Object.keys(this.props.theme).forEach((key) => {\r\n                resetStyles[key] = getComputedStyle(document.body).getPropertyValue(key);\r\n            });\r\n            Themes.resetStyles = resetStyles;\r\n            const state = {...Themes.resetStyles};\r\n            this.props.setCSS(this.generateCss(state), state);\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return <div>\r\n            {Object.keys(this.props.theme).map((key) => <Color\r\n                key={key}\r\n                selector=''\r\n                styleKey={key}\r\n                color={this.getValue}\r\n                title={key\r\n                    .replace('--jd-', '')\r\n                    .split('-')\r\n                    .map(a => a[0].toUpperCase() + a.substring(1))\r\n                    .join(' ')\r\n                }\r\n                setColor={this.setValue}\r\n            />)}\r\n\r\n            {/*<Color*/}\r\n            {/*    selector=\".jodit_icon,.jodit_toolbar .jodit_toolbar_btn>a\"*/}\r\n            {/*    styleKey=\"fill|color\"*/}\r\n            {/*    bindValue={this.setValue.bind(this, '.jodit_toolbar>li.jodit_toolbar_btn.jodit_with_dropdownlist .jodit_with_dropdownlist-trigger', 'border-top-color')}*/}\r\n            {/*    color={this.getValue}*/}\r\n            {/*    title=\"Toolbar icon color\"*/}\r\n            {/*    setColor={this.setValue}*/}\r\n            {/*/>*/}\r\n            {/*<Color*/}\r\n            {/*    selector=\".jodit_workplace,.jodit_toolbar,.jodit_statusbar,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-separator,.jodit_toolbar>li.jodit_toolbar_btn.jodit_toolbar_btn-break\"*/}\r\n            {/*    styleKey=\"borderColor\"*/}\r\n            {/*    color={this.getValue}*/}\r\n            {/*    title=\"Toolbar border color\"*/}\r\n            {/*    setColor={this.setValue}*/}\r\n            {/*/>*/}\r\n            {/*<Color*/}\r\n            {/*    selector=\".jodit_container\"*/}\r\n            {/*    styleKey=\"backgroundColor\"*/}\r\n            {/*    color={this.getValue}*/}\r\n            {/*    title=\"Editor background color\"*/}\r\n            {/*    setColor={this.setValue}*/}\r\n            {/*/>*/}\r\n            {/*<Color*/}\r\n            {/*    selector=\".jodit_wysiwyg\"*/}\r\n            {/*    styleKey=\"color\"*/}\r\n            {/*    bindValue={this.setValue.bind(this, '.jodit_placeholder', 'color')}*/}\r\n            {/*    bindTransform={(color) => {*/}\r\n            {/*        color = tinycolor(color);*/}\r\n            {/*        color.setAlpha(.5);*/}\r\n            {/*        return color.toHex8String();*/}\r\n            {/*    }}*/}\r\n            {/*    color={this.getValue}*/}\r\n            {/*    title=\"Editor text color\"*/}\r\n            {/*    setColor={this.setValue}*/}\r\n            {/*/>*/}\r\n        </div>;\r\n    }\r\n}\r\n","export const LoremIpsum = `<p>\r\n    <img style=\"float:right; margin: 10px;\" src=\"https://xdsoft.net/jodit/files/download.jpg\" alt=\"Itaque nostrum est-quod nostrum dico, artis est-ad ea principia, quae accepimus.\"></p>\r\n<h1>Itaque nostrum est-quod nostrum dico, artis est-ad ea principia, quae accepimus.</h1>\r\n\r\n<p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. <i>Quonam, inquit, modo?</i> <mark>Illum mallem levares, quo optimum atque humanissimum virum, Cn.</mark> Quae quidem vel cum periculo est quaerenda vobis; Amicitiam autem adhibendam esse censent,\r\n    quia sit ex eo genere, quae prosunt. <a href=\"http://loripsum.net/\" target=\"_blank\">Duo Reges: constructio interrete.</a> Illud quaero, quid ei, qui in voluptate summum bonum ponat, consentaneum sit dicere. At vero illa, quae Peripatetici, quae Stoici\r\n    dicunt, semper tibi in ore sunt in iudiciis, in senatu. Dic in quovis conventu te omnia facere, ne doleas. Nummus in Croesi divitiis obscuratur, pars est tamen divitiarum. Isto modo ne improbos quidem, si essent boni viri. Luxuriam non reprehendit,\r\n    modo sit vacua infinita cupiditate et timore. Sit ista in Graecorum levitate perversitas, qui maledictis insectantur eos, a quibus de veritate dissentiunt. </p>\r\n\r\n<blockquote cite=\"http://loripsum.net\">\r\n    Nec enim absolvi beata vita sapientis neque ad exitum perduci poterit, si prima quaeque bene ab eo consulta atque facta ipsius oblivione obruentur.\r\n</blockquote>\r\n\r\n\r\n<pre>Tum ille: Tu autem cum ipse tantum librorum habeas, quos hic\r\ntandem requiris?\r\n\r\nPossumusne ergo in vita summum bonum dicere, cum id ne in\r\ncena quidem posse videamur?\r\n</pre>\r\n\r\n\r\n<ul>\r\n    <li>Possumusne ergo in vita summum bonum dicere, cum id ne in cena quidem posse videamur?</li>\r\n    <li>Quodsi vultum tibi, si incessum fingeres, quo gravior viderere, non esses tui similis;</li>\r\n</ul>\r\n\r\n\r\n<ol>\r\n    <li>Qui autem diffidet perpetuitati bonorum suorum, timeat necesse est, ne aliquando amissis illis sit miser.</li>\r\n    <li>Nulla profecto est, quin suam vim retineat a primo ad extremum.</li>\r\n</ol>\r\n\r\n\r\n<dl>\r\n    <dt><dfn>Falli igitur possumus.</dfn></dt>\r\n    <dd>Quid enim ab antiquis ex eo genere, quod ad disserendum valet, praetermissum est?</dd>\r\n    <dt><dfn>Scrupulum, inquam, abeunti;</dfn></dt>\r\n    <dd>Scio enim esse quosdam, qui quavis lingua philosophari possint;</dd>\r\n    <dt><dfn>Poterat autem inpune;</dfn></dt>\r\n    <dd>Tum ille: Tu autem cum ipse tantum librorum habeas, quos hic tandem requiris?</dd>\r\n    <dt><dfn>Beatum, inquit.</dfn></dt>\r\n    <dd>Respondeat totidem verbis.</dd>\r\n</dl>`","import React, {Component} from 'react';\nimport CheckBox from \"../checkbox/CheckBox\";\nimport Number from \"../number/Number\";\nimport List from \"../list/List\";\n\nexport default class Sizes extends Component {\n    render() {\n        return <>\n\n            <fieldset>\n                <legend>Sizes</legend>\n\n                {this.props.state.height === 'auto' ||\n                <CheckBox popupKey={\"allowResizeY\"} right name=\"allowResizeY\" onChange={this.props.setOption}\n                          checked={this.props.state.allowResizeY} label=\"Allow Height resize\"/>\n                }\n                <CheckBox popupKey={\"height\"} name=\"height\" onChange={this.props.setHeight}\n                          checked={this.props.state.height === 'auto'} label=\"Auto height\"/>\n\n                {this.props.state.height === 'auto' ||\n                <Number\n                    label=\"Height in pixels\"\n                    name=\"height\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.height}\n                />\n                }\n                <Number\n                    label=\"Min height(px)\"\n                    name=\"minHeight\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.minHeight}\n                />\n                <Number\n                    label=\"Max height(px)\"\n                    name=\"maxHeight\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.maxHeight}\n                />\n                {this.props.state.width === 'auto' ||\n                <CheckBox popupKey={\"allowResizeX\"} right name=\"allowResizeX\" onChange={this.props.setOption}\n                          checked={this.props.state.allowResizeX} label=\"Allow Width resize\"/>\n                }\n                <CheckBox popupKey={\"width\"} name=\"width\" onChange={this.props.setWidth}\n                          checked={this.props.state.width === 'auto'} label=\"Auto width\"/>\n                <Number\n                    label=\"Min width(px)\"\n                    name=\"minWidth\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.minWidth}\n                />\n                <Number\n                    label=\"Max width(px)\"\n                    name=\"maxWidth\"\n                    onChange={this.props.setOption}\n                    value={this.props.state.maxWidth}\n                />\n\n                {this.props.state.width !== 'auto' ?\n                    <Number\n                        label=\"Width in pixels\"\n                        name=\"width\"\n                        onChange={this.props.setOption}\n                        value={this.props.state.width}\n                    /> : ''\n                }\n            </fieldset>\n            <fieldset>\n                <legend>Units</legend>\n                <List name=\"defaultFontSizePoints\" value={this.props.state.defaultFontSizePoints}\n                      onChange={this.props.setOption} list={{\n                    pt: 'Points',\n                    px: 'Pixels',\n                }} label=\"Font size units\"/>\n            </fieldset>\n        </>\n    }\n}","import React, { useEffect, useRef, forwardRef, useLayoutEffect } from 'react'\nimport { func, number, object, string } from 'prop-types'\nimport { Jodit } from 'jodit'\nimport 'jodit/build/jodit.es2018.min.css'\n\nconst JoditEditor = forwardRef((props, ref) => {\n    const {\n        config,\n        id,\n        name,\n        onBlur,\n        onChange,\n        tabIndex,\n        value,\n        editorRef\n    } = props\n\n    const textArea = useRef(null)\n\n    useLayoutEffect(() => {\n        if (ref) {\n            if (typeof ref === 'function') {\n                ref(textArea.current)\n            } else {\n                ref.current = textArea.current\n            }\n        }\n    }, [textArea])\n\n    useEffect(() => {\n        const element = textArea.current\n        textArea.current = Jodit.make(element, config)\n        textArea.current.workplace.tabIndex = tabIndex || -1\n\n        // adding event handlers\n        textArea.current.events.on('blur', value => onBlur && onBlur(value))\n        textArea.current.events.on('change', value => onChange && onChange(value))\n\n        if (id) element.id = id\n        if (name) element.name = name\n\n        if (typeof editorRef === 'function') {\n            editorRef(textArea.current)\n        }\n\n        return () => {\n            textArea.current.destruct()\n            textArea.current = element\n        }\n    }, [config])\n\n    useEffect(() => {\n        if (textArea?.current?.value !== value) {\n            textArea.current.value = value\n        }\n    }, [value])\n\n    return (\n        <textarea ref={textArea} />\n    )\n})\n\nJoditEditor.propTypes = {\n    config: object,\n    id: string,\n    name: string,\n    onBlur: func,\n    onChange: func,\n    editorRef: func,\n    tabIndex: number,\n    value: string,\n}\n\nexport default JoditEditor\n","import React, { Component } from 'react';\r\nimport {Jodit} from 'jodit';\r\n\r\nimport style from './style.module.css';\r\nimport { Light as SyntaxHighlighter } from \"react-syntax-highlighter\";\r\nimport js from 'react-syntax-highlighter/dist/esm/languages/hljs/javascript';\r\nimport css from 'react-syntax-highlighter/dist/esm/languages/hljs/css';\r\nimport { agate as codeStyle} from 'react-syntax-highlighter/dist/cjs/styles/hljs';\r\n\r\nimport Tabs from \"../tab/Tabs\";\r\nimport Tab from \"../tab/Tab\";\r\nimport Options from \"./Options\";\r\nimport Buttons from \"./Buttons\";\r\nimport CheckBox from \"../checkbox/CheckBox\";\r\nimport URL from \"../url/URL\";\r\nimport Text from \"../text/Text\";\r\nimport URLS from \"../url/URLS\";\r\nimport CopyText from \"../copytext/CopyText\";\r\nimport State from \"./State\";\r\nimport { http_build_query } from \"../../App\";\r\nimport createHistory from 'history/createBrowserHistory'\r\nimport Plugins from \"../plugins/Plugins\";\r\nimport Themes from \"../themes/Themes\";\r\nimport { LoremIpsum } from \"./LoremIpsum\";\r\nimport Sizes from \"./Sizes\";\r\nimport JoditEditor from \"../editor/editor\";\r\nimport List from \"../list/List\";\r\n\r\nSyntaxHighlighter.registerLanguage('javascript', js);\r\nSyntaxHighlighter.registerLanguage('css', css);\r\n\r\nconst history = createHistory();\r\n\r\n\r\nclass JoditMaster extends Component {\r\n    getDefaultState = () => {\r\n        return {\r\n            showLoremIpsum: true,\r\n            currentButtonsTab: null,\r\n            currentTab: this.props.config.currentTab,\r\n            workBoxWidth: 'auto',\r\n\r\n            buttons: {\r\n                buttons: [],// [...Jodit.defaultOptions.buttons],\r\n                buttonsMD: this.getButtons('buttonsMD'),\r\n                buttonsSM: this.getButtons('buttonsSM'),\r\n                buttonsXS: this.getButtons('buttonsXS')\r\n            },\r\n\r\n            removeButtons: {\r\n                buttons: [],\r\n                buttonsMD: this.getRemoveButtons('buttonsMD'),\r\n                buttonsSM: this.getRemoveButtons('buttonsSM'),\r\n                buttonsXS: this.getRemoveButtons('buttonsXS'),\r\n            },\r\n\r\n            activeIndex: {\r\n                buttons: 0,\r\n                buttonsMD: 0,\r\n                buttonsSM: 0,\r\n                buttonsXS: 0,\r\n            },\r\n\r\n            css: '',\r\n\r\n            theme: {\r\n                '--jd-color-background-default': '#ffffff',\r\n                '--jd-color-border': '#dadada',\r\n                '--jd-color-panel': '#f9f9f9',\r\n                '--jd-color-icon': '#4c4c4c',\r\n            },\r\n\r\n            config: {\r\n                autofocus: Jodit.defaultOptions.autofocus,\r\n                useSearch: Jodit.defaultOptions.useSearch,\r\n                defaultFontSizePoints: Jodit.defaultOptions.defaultFontSizePoints,\r\n                toolbar: Jodit.defaultOptions.toolbar,\r\n                iframe: Jodit.defaultOptions.iframe,\r\n                iframeStyle: Jodit.defaultOptions.iframeStyle,\r\n\r\n                uploader: Jodit.defaultOptions.uploader,\r\n\r\n                textIcons: Jodit.defaultOptions.textIcons,\r\n                readonly: Jodit.defaultOptions.readonly,\r\n                spellcheck: Jodit.defaultOptions.spellcheck,\r\n                language: Jodit.defaultOptions.language,\r\n                direction: Jodit.defaultOptions.direction,\r\n                theme: Jodit.defaultOptions.theme,\r\n                toolbarButtonSize: Jodit.defaultOptions.toolbarButtonSize,\r\n                enter: Jodit.defaultOptions.enter,\r\n                defaultMode: Jodit.defaultOptions.defaultMode,\r\n                allowResizeY: Jodit.defaultOptions.allowResizeY,\r\n                allowResizeX: Jodit.defaultOptions.allowResizeX,\r\n\r\n                toolbarAdaptive: Jodit.defaultOptions.toolbarAdaptive,\r\n                toolbarSticky: Jodit.defaultOptions.toolbarSticky,\r\n                toolbarStickyOffset: Jodit.defaultOptions.toolbarStickyOffset,\r\n\r\n                showCharsCounter: Jodit.defaultOptions.showCharsCounter,\r\n                showWordsCounter: Jodit.defaultOptions.showWordsCounter,\r\n                showXPathInStatusbar: Jodit.defaultOptions.showXPathInStatusbar,\r\n\r\n                saveHeightInStorage: Jodit.defaultOptions.saveHeightInStorage,\r\n                saveModeInStorage: Jodit.defaultOptions.saveModeInStorage,\r\n\r\n                askBeforePasteHTML: Jodit.defaultOptions.askBeforePasteHTML,\r\n                askBeforePasteFromWord: Jodit.defaultOptions.askBeforePasteFromWord,\r\n                defaultActionOnPaste: Jodit.defaultOptions.defaultActionOnPaste,\r\n\r\n                disablePlugins: Jodit.defaultOptions.disablePlugins,\r\n\r\n                height:  Jodit.defaultOptions.height,\r\n                minHeight:  Jodit.defaultOptions.minHeight,\r\n                maxHeight:  Jodit.defaultOptions.maxHeight,\r\n                width:  Jodit.defaultOptions.width,\r\n                minWidth:  Jodit.defaultOptions.minWidth,\r\n                maxWidth:  Jodit.defaultOptions.maxWidth,\r\n                sizeLG: 800,\r\n            }\r\n        }\r\n    };\r\n\r\n    getButtons(type) {\r\n        return []//;Jodit.defaultOptions.buttonsXS.concat(this.getRemoveButtons(type))\r\n    }\r\n\r\n    getRemoveButtons(type) {\r\n        return [];\r\n        // return Jodit.defaultOptions.buttons.filter((key) => {\r\n        //     return key !== '|' && key !== '\\n' && Jodit.defaultOptions[type].indexOf(key) === -1\r\n        // })\r\n    }\r\n\r\n    componentDidMount() {\r\n        const jodit = Jodit.make(this.editorRef, {\r\n            disablePlugins: 'mobile'\r\n        });\r\n\r\n        this.setState({\r\n            ...this.state,\r\n            buttons: {\r\n                ...this.state.buttons,\r\n                buttons: jodit.toolbar.getButtonsNames()\r\n            }\r\n        });\r\n\r\n        jodit.destruct();\r\n    }\r\n\r\n    state = (((defaultState) => {\r\n        return {\r\n            ...defaultState,\r\n            css: defaultState.css || this.props.config.initialCSS || '',\r\n            config: {\r\n                ...defaultState.config,\r\n                ...this.props.config.initialConfig\r\n            }\r\n        };\r\n    })(this.getDefaultState()));\r\n\r\n    setButtonsTab = (value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            currentButtonsTab: value\r\n        });\r\n    };\r\n\r\n    setTab = (value) => {\r\n        this.setState({\r\n            ...this.state,\r\n            currentTab: value\r\n        });\r\n    };\r\n\r\n    height = 150;\r\n    setHeight = (value) => {\r\n        this.setOption(value === true ? 'auto' : this.height, 'height')\r\n    };\r\n\r\n    width = 500;\r\n    setWidth = (value) => {\r\n        this.setOption(value === true ? 'auto' : this.width, 'width')\r\n    };\r\n\r\n    setButtons = (name, buttons, removeButtons, activeIndex) => {\r\n        const state = {...this.state};\r\n        let change = false;\r\n\r\n        if (this.state.buttons[name] !== buttons) {\r\n            state.buttons[name] = buttons;\r\n            change = true;\r\n        }\r\n\r\n        if (this.state.removeButtons[name] !== removeButtons) {\r\n            state.removeButtons[name] = removeButtons;\r\n            change = true;\r\n        }\r\n\r\n        if (change) {\r\n            state.config = {...state.config, [name]: buttons.filter((key) => removeButtons.indexOf(key) === -1)}\r\n        }\r\n\r\n        if (this.state.activeIndex[name] !== activeIndex) {\r\n            state.activeIndex[name] = activeIndex;\r\n            change = true;\r\n        }\r\n\r\n        if (change) {\r\n            this.setState(state);\r\n        }\r\n    };\r\n\r\n    timer;\r\n    toggleLoremIpsum = (showLoremIpsum) => {\r\n        if (!showLoremIpsum && this.value === LoremIpsum) {\r\n            this.value = '';\r\n        }\r\n        this.setState({\r\n            ...this.state,\r\n            showLoremIpsum\r\n        });\r\n    };\r\n\r\n    setOption = (value, name) => {\r\n        clearTimeout(this.timer);\r\n        this.timer = setTimeout(() => {\r\n            switch (name) {\r\n                case 'height':\r\n                case 'width':\r\n                    if (value !== 'auto') {\r\n                        this[name] = value;\r\n                    }\r\n                    break;\r\n                default:\r\n            }\r\n\r\n            if (JSON.stringify(this.state[name]) !== JSON.stringify(value)) {\r\n                this.setState(prevState => {\r\n                    let newStage = {...prevState.config};\r\n\r\n                    if (name === 'iframe' && value ===  false) {\r\n                        newStage.iframeStyle = Jodit.defaultOptions.iframeStyle;\r\n                        newStage.iframeCSSLinks = Jodit.defaultOptions.iframeCSSLinks;\r\n                        newStage.iframeBaseUrl = Jodit.defaultOptions.iframeBaseUrl;\r\n                    }\r\n\r\n                    let link = newStage, keys = name.split('.');\r\n\r\n                    keys.forEach((key, index) => {\r\n                        if (index !== keys.length - 1) {\r\n                            link[key] = {...link[key]};\r\n                            link = link[key];\r\n                        }\r\n                    });\r\n\r\n                    name = keys[keys.length - 1];\r\n\r\n                    link[name] = value;\r\n\r\n                    return {\r\n                    ...prevState,\r\n                        config: newStage\r\n                    }\r\n                });\r\n\r\n            }\r\n        }, 100)\r\n    };\r\n\r\n    getCode = () => {\r\n        const getChangedOption = (config, defaultOptions) => {\r\n            const keys = Object.keys(config), options = Array.isArray(config) ? [] : {};\r\n\r\n            keys.forEach((key) => {\r\n                if (defaultOptions[key] !== undefined && JSON.stringify(config[key]) !== JSON.stringify(defaultOptions[key]) && ['sizeLG'].indexOf(key) === -1) {\r\n                    options[key] = typeof config[key] === 'object' ? getChangedOption(config[key], defaultOptions[key]) : config[key];\r\n                }\r\n            });\r\n\r\n            return options;\r\n        };\r\n\r\n        const options = getChangedOption(this.state.config, Jodit.defaultOptions);\r\n\r\n        ['buttons', 'buttonsMD', 'buttonsSM', 'buttonsXS'].forEach((key) => {\r\n            if (options[key]) {\r\n                options[key] = options[key].toString();\r\n            }\r\n        });\r\n\r\n        if (typeof this.props.config.setConfig === 'function') {\r\n            this.props.config.setConfig(options);\r\n        }\r\n\r\n        this.__isDefault = Object.keys(options).length === 0 && this.state.css === '';\r\n\r\n        const config = JSON.stringify(options, null, 2);\r\n\r\n        if (this.state.currentTab !== 'Options' && this.state.currentTab !== null) {\r\n            options.currentTab = this.state.currentTab;\r\n        }\r\n\r\n        if (this.props.config.historyAPI) {\r\n            history.push('?' + http_build_query(options), options)\r\n        }\r\n\r\n        return 'var editor = new Jodit(\"#editor\"' + (config !== '{}' ? ', '  + config + '' : '') + ');';\r\n    };\r\n\r\n    value = '';\r\n\r\n    onEditorChange = (value) => {\r\n        this.value = value;\r\n    };\r\n\r\n    setWorkboxWidth = (tab) => {\r\n        this.setState({\r\n            ...this.state,\r\n            workBoxWidth: tab.props.width\r\n        });\r\n\r\n        setTimeout(() => {\r\n            let event = document.createEvent(\"HTMLEvents\");\r\n            event.initEvent(\"resize\", true, true);\r\n            window.dispatchEvent(event);\r\n        }, 100);\r\n    };\r\n\r\n    setCSS = (css, theme) => {\r\n        this.setState({\r\n            ...this.state,\r\n            css: css || this.props.config.initialCSS,\r\n            theme\r\n        });\r\n    };\r\n\r\n    __isDefault = true;\r\n\r\n    editorRef;\r\n\r\n    isDefault = () => {\r\n        return this.__isDefault;\r\n    };\r\n\r\n    restoreDefault = () => {\r\n        if (window.confirm('Are you sure you want to restore the default settings?')) {\r\n            Themes.resetStyles = {};\r\n            this.setState({...this.getDefaultState()});\r\n        }\r\n    };\r\n\r\n    render() {\r\n        const code = this.getCode();\r\n\r\n        if (typeof this.props.config.setCode === 'function') {\r\n            this.props.config.setCode(code);\r\n        }\r\n\r\n        if (typeof this.props.config.setCSS === 'function' && this.state.css) {\r\n            this.props.config.setCSS(this.state.css);\r\n        }\r\n\r\n        return (\r\n            <div className={style.layout}>\r\n                <div className={style.leftside}>\r\n                    {this.props.config.showEditor &&\r\n                    <div>\r\n                        <div className={style.workbox} style={{width: this.state.workBoxWidth}}>\r\n                            <div className={style.exampleHeader}>\r\n                                <CheckBox\r\n                                    name=\"showLoremIpsum\"\r\n                                    onChange={this.toggleLoremIpsum}\r\n                                    defaultChecked={this.state.showLoremIpsum}\r\n                                    label=\"Show lorem ipsum text\"\r\n                                />\r\n\r\n                                <a href=\"https://xdsoft.net/jodit/pro/\">Try Jodit PRO</a>\r\n                            </div>\r\n                            <JoditEditor\r\n                                ref = {(ref) => this.editorRef = ref}\r\n                                onChange={this.onEditorChange}\r\n                                config={this.state.config}\r\n                                value={this.state.showLoremIpsum ? LoremIpsum : this.value}\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    }\r\n                    {this.props.config.showCode &&\r\n                    <div>\r\n                        <h2>Code</h2>\r\n                        <CopyText>\r\n                            <SyntaxHighlighter showLineNumbers={false} language='javascript'\r\n                                               style={codeStyle}>{code}</SyntaxHighlighter>\r\n                        </CopyText>\r\n                        {this.state.css && <React.Fragment>\r\n                            <h2>CSS</h2>\r\n                            <CopyText>\r\n                                <SyntaxHighlighter showLineNumbers={false} language='css' style={codeStyle}>{this.state.css}</SyntaxHighlighter>\r\n                            </CopyText>\r\n                        </React.Fragment>}\r\n                    </div>\r\n                    }\r\n                    {this.state.css && <style>{this.state.css}</style>}\r\n                </div>\r\n                <div className={style.rightside}>\r\n                    <div className={style.item}>\r\n                        <Tabs currentTab={this.state.currentTab} setTab={this.setTab}>\r\n                            <Tab label=\"Options\">\r\n                                {this.isDefault() || (<div className={style.defaultRestore}>\r\n                                    <button onClick={this.restoreDefault} type={\"button\"}>Restore defaults</button>\r\n                                </div>)}\r\n\r\n                                <Options\r\n                                    state={this.state.config}\r\n                                    height={this.height}\r\n                                    width={this.width}\r\n                                    setOption={this.setOption}\r\n                                    setHeight={this.setHeight}\r\n                                    setWidth={this.setWidth}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Sizes\">\r\n                                <Sizes\r\n                                    state={this.state.config}\r\n                                    height={this.height}\r\n                                    width={this.width}\r\n                                    setOption={this.setOption}\r\n                                    setHeight={this.setHeight}\r\n                                    setWidth={this.setWidth}\r\n                                />\r\n                            </Tab>\r\n                            {this.props.config.showButtonsTab === false ||\r\n                                this.state.config.toolbar === false ||\r\n                                <Tab label=\"Buttons\">\r\n                                    <CheckBox popupKey=\"toolbarAdaptive\" name=\"toolbarAdaptive\" onChange={this.setOption} defaultChecked={this.state.config.toolbarAdaptive} label=\"Toolbar adaptive\"/>\r\n\r\n                                    <Tabs setTab={this.setButtonsTab} currentTab={this.state.currentButtonsTab}>\r\n                                        <Tab onClick={this.setWorkboxWidth} width={\"auto\"} label=\"Desktop\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttons} removeButtons={this.state.removeButtons.buttons} name=\"buttons\" setButtons={this.setButtons} buttons={this.state.buttons.buttons}/>\r\n                                        </Tab>\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={799} label=\"Medium(900px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsMD}\r\n                                                     removeButtons={this.state.removeButtons.buttonsMD} name=\"buttonsMD\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsMD}/>\r\n                                        </Tab>\r\n                                        }\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={699} label=\"Tablet(700px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsSM}\r\n                                                     removeButtons={this.state.removeButtons.buttonsSM} name=\"buttonsSM\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsSM}/>\r\n                                        </Tab>\r\n                                        }\r\n                                        {!this.state.config.toolbarAdaptive ||\r\n                                        <Tab onClick={this.setWorkboxWidth} width={399} label=\"Mobile(400px)\">\r\n                                            <Buttons activeIndex={this.state.activeIndex.buttonsXS}\r\n                                                     removeButtons={this.state.removeButtons.buttonsXS} name=\"buttonsXS\"\r\n                                                     setButtons={this.setButtons} buttons={this.state.buttons.buttonsXS}/>\r\n                                        </Tab>\r\n                                        }\r\n                                    </Tabs>\r\n                                </Tab>\r\n                            }\r\n                            {this.state.config.iframe === false ||\r\n                            <Tab label=\"Iframe mode\">\r\n                                <URL\r\n                                    label=\"Iframe Base URL\"\r\n                                    name=\"iframeBaseUrl\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeBaseUrl}\r\n                                />\r\n                                <Text\r\n                                    label=\"iframe Default Style\"\r\n                                    name=\"iframeStyle\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeStyle}\r\n                                />\r\n                                <URLS\r\n                                    label=\"Iframe external stylesheets files\"\r\n                                    name=\"iframeCSSLinks\"\r\n                                    onChange={this.setOption}\r\n                                    value={this.state.config.iframeCSSLinks}\r\n                                />\r\n                            </Tab>\r\n                            }\r\n                            <Tab label=\"State\">\r\n                                <State\r\n                                    config={this.state.config}\r\n                                    setOption={this.setOption}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Plugins\">\r\n                                <Plugins\r\n                                    config={this.state.config}\r\n                                    setOption={this.setOption}\r\n                                />\r\n                            </Tab>\r\n                            <Tab label=\"Themes\">\r\n                                <List value={this.state.config.theme} name=\"theme\" onChange={this.setOption} list={{\r\n                                    'default' : 'Default',\r\n                                    'dark' : 'Dark',\r\n                                }} label=\"Theme\"/>\r\n\r\n                                {this.state.config.theme === 'default' &&\r\n                                <Themes theme={this.state.theme} setCSS={this.setCSS}/>}\r\n                            </Tab>\r\n                        </Tabs>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default JoditMaster;\r\n","import React, { Component } from 'react';\nimport './App.css';\nimport JoditMaster from \"./components/master/JoditMaster\";\n\nexport const urlencode = function (str) {\n    str = (str + '')\n\n    return encodeURIComponent(str)\n        .replace(/!/g, '%21')\n        .replace(/'/g, '%27')\n        .replace(/\\(/g, '%28')\n        .replace(/\\)/g, '%29')\n        .replace(/\\*/g, '%2A')\n};\n\nexport function http_build_query (formdata, numericPrefix, argSeparator) {\n    let encodeFunc = urlencode;\n\n    let value\n    let key\n    let tmp = []\n\n    let _httpBuildQueryHelper = function (key, val, argSeparator) {\n        let k\n        let tmp = []\n        if (val === true) {\n            val = true;\n        } else if (val === false) {\n            val = false;\n        }\n        if (val !== null) {\n            if (typeof val === 'object') {\n                for (k in val) {\n                    if (val[k] !== null) {\n                        tmp.push(_httpBuildQueryHelper(key + '[' + k + ']', val[k], argSeparator))\n                    }\n                }\n                return tmp.join(argSeparator)\n            } else if (typeof val !== 'function') {\n                return encodeFunc(key) + '=' + encodeFunc(val)\n            } else {\n                throw new Error('There was an error processing for http_build_query().')\n            }\n        } else {\n            return ''\n        }\n    }\n\n    if (!argSeparator) {\n        argSeparator = '&'\n    }\n    for (key in formdata) {\n        value = formdata[key]\n        if (numericPrefix && !isNaN(key)) {\n            key = String(numericPrefix) + key\n        }\n        let query = _httpBuildQueryHelper(key, value, argSeparator)\n        if (query !== '') {\n            tmp.push(query)\n        }\n    }\n\n    return tmp.join(argSeparator)\n}\n\nconst getParams = query => {\n    if (!query) {\n        return { };\n    }\n\n    return (/^[?#]/.test(query) ? query.slice(1) : query).split('&')\n        .reduce((params, param) => {\n            let [ key, value ] = param.split('=');\n\n            key = key\n                .replace(/%5B/g, '.')\n                .replace(/%5D/g, '')\n\n            let link = params, keys = key.split('.');\n            keys.forEach((name, index) => {\n                if (index !== keys.length - 1) {\n                    if (!link[name]) {\n                        link[name] = {};\n                    }\n                    link = link[name];\n                }\n            });\n\n            key = keys[keys.length - 1];\n\n            link[key] = value ? decodeURIComponent(value.replace(/\\+/g, ' ')) : '';\n\n            if (link[key].toString().match(/^[0-9]+$/)) {\n                link[key] = parseInt(link[key], 10);\n            }\n\n            if (link[key] === 'true') {\n                link[key] = true;\n            }\n            if (link[key] === 'false') {\n                link[key] = false;\n            }\n\n\n            return params;\n        }, { });\n};\n\nclass App extends Component {\n  config;\n  constructor() {\n    super();\n\n    this.config = {...{\n        currentTab: null,\n        showCode: true,\n        showEditor: true,\n        showButtonsTab: true,\n        historyAPI: true,\n        dataURL: './',\n        setCSS: (css) => {},\n        setCode: (code) => {},\n        setConfig: (config) => {},\n        ready: () => {},\n        initialCSS: '',\n        initialConfig: {\n        },\n        ...window.JoditPlayConfig\n    }};\n\n    this.config.currentTab = getParams(window.location.search.substr(1))['currentTab'] || null;\n    this.config.initialConfig = {...this.config.initialConfig, ...getParams(window.location.search.substr(1))};\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n          <JoditMaster config={this.config}/>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import 'react-app-polyfill/ie11';\nimport 'react-app-polyfill/stable';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nif (!window.JoditPlayConfig) {\n    window.JoditPlayConfig = {\n        // dataURL: './',\n    };\n}\n\nwindow.JoditPlayReady = (element) => {\n    ReactDOM.render(<App />, element);\n};\n\nconst element = document.getElementById('root');\nelement && window.JoditPlayReady(element);\n"],"sourceRoot":""}